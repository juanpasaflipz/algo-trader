version: '3.8'

services:
  app:
    build: .
    container_name: algo-trader
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://trader:trader_pass@postgres:5432/algo_trader
      - REDIS_URL=redis://redis:6379
      - TRADINGVIEW_WEBHOOK_SECRET=${TRADINGVIEW_WEBHOOK_SECRET:-change_me_in_production}
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trader-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: algo-trader-db
    environment:
      - POSTGRES_USER=trader
      - POSTGRES_PASSWORD=trader_pass
      - POSTGRES_DB=algo_trader
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trader-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trader -d algo_trader"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: algo-trader-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trader-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  prometheus:
    image: prom/prometheus:latest
    container_name: algo-trader-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - trader-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

networks:
  trader-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  prometheus_data: